import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { formatDateToDMY } from '@core/helpers';
import { getExanteTransactionsList } from 'src/core/helpers/csv';

const ACCOUNT_DIV_TAX = 0.15;

export default function Home() {
  const [transactions, setTransactions] = useState<any>();
  const [totalInvestedAmount, setTotalInvestedAmount] = useState<any>();
  const [buiedYearlyDivs, setBuiedYearlyDivs] = useState<number>(0);

  const handleCsvReportUpload = (e: any) => {
    const input = e.target.files[0];
    const reader = new FileReader();

    reader.onload = function (e: any) {
      const transactionsList = getExanteTransactionsList(e.target.result)
      setTransactions(transactionsList)
    };

    reader.readAsText(input);
  }

  transactions && console.log(transactions, process.env.POLYGON_IO_API_KEY);

  useEffect(() => {
    if (transactions) {
      console.log(parseFloat(transactions.find((transaction: any) => transaction.ISIN === "FUNDING/WITHDRAWAL").Price));

      const invested = transactions
        .filter((transaction: any) => transaction.ISIN === "FUNDING/WITHDRAWAL")
        .reduce((previousValue: any, currentValue: any) => previousValue + parseFloat(currentValue.Price), 0)

      setTotalInvestedAmount(invested)
    }
  }, [transactions])

  useEffect(() => {
    if (transactions) {
      const url = "https://api.polygon.io/v3/reference";
      const tiker = transactions[0]["Symbol ID"].split('.')[0];

      fetch(`${url}/dividends?ticker=${tiker}&apiKey=${process.env.NEXT_PUBLIC_POLYGON_IO_API_KEY}`)
        .then(res => res.json())
        .then(({ results }) => setBuiedYearlyDivs(results[0].cash_amount * results[0].frequency));
        
    }
  }, [transactions])


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <input
          type="file"
          placeholder="Upload Exante CSV report"
          // value={csvReport}
          onChange={handleCsvReportUpload}
        />
        {transactions && <>
          <p>
            <b>Invested: </b> <span>${totalInvestedAmount}</span>
          </p>
          <p>
            <b>Transactions: </b> <span>{transactions.length}</span>
          </p>
          <p>
            <b>Last transaction: </b> <span>{transactions[0].Side.toUpperCase()} - {transactions[0]["Symbol ID"]} - {transactions[0].Quantity} - ${transactions[0].Price} - {formatDateToDMY(new Date(transactions[0].Time))}</span>
            <p>
              Passive income earned: <small style={{ color: "green" }}>+ ${buiedYearlyDivs - (buiedYearlyDivs * ACCOUNT_DIV_TAX)}</small> a year
            </p>
          </p>
        </>}

      </main>
    </div>
  )
}
